import unittest
from unittest.mock import patch, MagicMock

class TestDb2DataSource(unittest.TestCase):

    def setUp(self):
        # 初始化 self.spark 等对象
        self.spark = ...  # 初始化 spark 会话
        self.logger = ...  # 初始化 logger
        self.config = ...  # 初始化 config
        self.schema = ...  # 初始化 schema
        self.db2_data_source = ...  # 初始化 db2_data_source 对象

    def test_read_data(self):
        # 正常读取数据的测试用例
        pass

    def test_read_data_exception(self):
        # 修改这里的 patch 用法
        with patch('pyspark.sql.read.api.PythonReader.read', new_callable=MagicMock) as mock_read:
            mock_read.side_effect = Exception("JDBC read failed")

            with self.assertRaises(Exception):
                self.db2_data_source.read_data(
                    self.logger, self.spark, self.config, "SAMPLE_TABLE", self.schema
                )

            # 验证日志记录
            self.logger.error.assert_called_with("Error details: JDBC read failed")
            self.logger.error.assert_called_with(mock_read.jdbc.side_effect.__traceback__.format_exc())

if __name__ == '__main__':
    unittest.main()
